name: Pull CD Build Test For Docker Image

on:
  push:
    branches:
      - master

jobs:
  pullCdBuildDockerImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check if there are conflicts when local merging master
        id: local_merge_master
        run: git merge origin/master
      - name: Build Terraform Docker Image
        id: build_terraform_docker_image
        run: |
          make \
            STEP_1_IMAGE="golang:1.14.1-alpine3.11" \
            STEP_2_IMAGE="alpine:3.11" \
            TERRAFORM_VERSION=0.12.20 \
            docker-build
  logPullCdBuildDockerImage:
    needs: pullCdBuildDockerImage
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables With Build Info
        id: job_info
        run: |
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o job_info.json https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs
          echo ::set-output name=log_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .url')
          echo ::set-output name=html_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .html_url')
          echo ::set-output name=status::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .conclusion')
          echo ::set-output name=branch_name::$(echo ${GITHUB_REF##*/})
          echo ::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY##*/})
      - name: Generate log file
        run: curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o build_logs.txt ${{ steps.job_info.outputs.log_url }}/logs
      - name: Persisting log
        id: persisting_log
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: workflow_log
          path: build_logs.txt
